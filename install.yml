---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRSGo1WXZ1dkFpZ0o5NjZiLzRRWElPekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOREV3TWpreE1qSTJOVGhhRncweU5URXdNamt4TWpJMk5UaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBN1ZZdTkyRERETm1zU3p5YVM1WUkvY2pNZFpLeEpCdkZob0FVSEJBSGxjaDVwU0lPd2srWQpkU1BQT3RScGI3UmpGSlloV0NsNWw2YjZCM3JWc2RvRGd3NVU4eVFHeXY0elpwSHNJOGxxOVJlVDdHTEVVYitXCkFXS1FqeHo4WjJyayt5dzlCNUFBL05ZWi8xOW5VZjR5K3pmbjVBanl6bFFpOHdWSGZuWmFIMjR0ZTRQM1ZsVHUKUVJFTUFnMnBaZzk2T2FvOGI3RXY0V3VlU1ZxdmZDek9DbjF3L1doRjhvUnNBZWp3amM2dGhXT2F4QkJlbHFEVgpmWnFpMTNwQithS1lHalZEeTJpWFVwM3U3RFVpN01oMjhIYnFRcDlQVGVWNXBDOGFkVlFxN0RZcVVSL291SlljCnpBUzNHRXJHQnloQ29LMGxicHdvMkp1OG41TzhrN202ZHdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtnQnZSbWRHbTNIREVuTkVCeWpQUDc0RzNqWmpNR0pCbTJneDJpRUliNFAKbmFCR0tPdDVYR2p6YkxwV1NaYmpXM09GVk9Qb3ljMGdqRXNINUd1U2hwZHA0OHhqOG5CQ2xmSGZuVitnYTRVYwpmVFpuQ0FpSWFXcndQNEJycXVydFlEeTliVUhuRFErMlJock84WVo1aXZ1ejZKQUlnT1JyeTBQT0dEdTg0NXkwCngrUUwzSm14UjQ3cndwZUdHd1gxa2Uwb1Y0a2Nqc3ZvV2RJc0xjWFlnN2d5UVRkZWNTVEJBQjBOOW5iSkRMaEgKZU1XODlzdURlSllJRDlvZlRjY2FCRWR2eTQvNW5MQitOVktnN0JmakFQWTdibWdNb2EyMVJWek9aSVFBSEkwRwpsMkZxUXh4OWJzZm05MFVjcXBFMXVWRGFMbi9zTU4wVWV0am1uMFhkcXhRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN1ZZdTkyRERETm1zU3p5YVM1WUkvY2pNZFpLeEpCdkZob0FVSEJBSGxjaDVwU0lPCndrK1lkU1BQT3RScGI3UmpGSlloV0NsNWw2YjZCM3JWc2RvRGd3NVU4eVFHeXY0elpwSHNJOGxxOVJlVDdHTEUKVWIrV0FXS1FqeHo4WjJyayt5dzlCNUFBL05ZWi8xOW5VZjR5K3pmbjVBanl6bFFpOHdWSGZuWmFIMjR0ZTRQMwpWbFR1UVJFTUFnMnBaZzk2T2FvOGI3RXY0V3VlU1ZxdmZDek9DbjF3L1doRjhvUnNBZWp3amM2dGhXT2F4QkJlCmxxRFZmWnFpMTNwQithS1lHalZEeTJpWFVwM3U3RFVpN01oMjhIYnFRcDlQVGVWNXBDOGFkVlFxN0RZcVVSL28KdUpZY3pBUzNHRXJHQnloQ29LMGxicHdvMkp1OG41TzhrN202ZHdJREFRQUJBb0lCQVFDaHZrVTlzNFRaNGhKbwpKOEhqVnptRGN1L2NCSCtTWXhiSEpjd09uK0g3Y3VkcjRYejdjWEV1QzV4enRFU3lxdFdITnhVOFZ1K1ZxV2JsCjZCRndKbXFVU3hVYnFtYXl1bkJmSzMwcG1sKzQ3anVTTW5FbVlSR2ltZ0I0ZDhHUDNTcDEvbDBOSlZkMjk1WTYKRWxPQWJtTmlEMlNLWklyTWtFeE5JRURyNzA1VjhkazF4c1hybDZXZGVhNEZRTzlGbnlkVE5QVE5KMWx1cVZRWgpIOE4yZ1J1V0FRVlBvYVNITDBjck5qZ093NVQzVWF1LzhSQ2djOWVIVWZWZWhkMDEwWERTS25CUEs2UktSZlZ4Ck5BeDg0N2hHVEtNRlUva1EwM0FLWlBvVTlsNzhock1OdmNmczBMTGpPWk5LbCtISWR6cXUzQ1JNWHdwWVAzZ2oKWi9uRi9MV0pBb0dCQVBmSk9pK3R2bmMxMHpXaEtOY0owV0NkN1ZiL3NBcXFGY2RjcTFWaDRadGtEbDdraFByZwozeDcwck1FaWN5YnhML2NLc1dHQ2dpL2xpTUNmUEZFZTZ2eENyUTBvMkNFN0RLZWc3clcrMU1vYkJETmRJMEVOCjkwN25lTVEzcE9PRnVUUVFlcVd3UXE2cS91UjRsRWRLZzRNaUZTa0xvc2x6bWRBOXRIOUVzUmtqQW9HQkFQVTAKUjdUc3hTa3hsMmZYUVl4SkpFakVoS053MXlnUEgwMSsrUjMyaGlIQWllOFQ3S1FTMG1RaGd4U2JKVTNseDJxeAozUW9VdzhUZ21QRzF4SEI3RW92S0UvbXBoMXRGL085ZmNVcHZBRUxoajFmUHd0UndseTZEOEVQOXY5c0pCdWY2ClQ3amdEUFFaWDdUQ21mYzJQbkNsckppNWdWOTloMzdPMVVtOFNuQ2RBb0dCQUlZM2RwQWE4WitMQlVQNGJySEUKUEtpMEFycHNOMFFmaXpwNDVNbVVBbXQwVUNCd2NlT2U2TnpRdGI3TDFVb1R2T0o0NVVvbk1qT1ZoblNvRERqNApvVnBSRjRHWVRUSDYxVWo3Y0RIOEV6RUNYMDBmTnhobTR6M1hQZUF6TDlxYU5ZNlJHbzRqSW91UVRnOGRqVnZzCmJiNGJPUkVKbjN5MVpHeWE3K2s4SVIyM0FvR0FFWE0vQnlreWZ0UUFxbXN2UndTTmlJQXowRTNmZ2dKUmYvcGgKVURpVEl5UElyVE1GekVkcW9hV2c1bjZFRVI4aEtmNnVkR0UxN1hUdWJZVTZEYWMwa3E0MjdiV2E1R3YrckNwbQpyWjFvcjFuT0VibS9hODczYzJBQVlWWlZxUWpqYk83cmJZVEVaenJIRE40c2h1TmRYamJzS1pKS0dybWNRdklGClM5SVNtaUVDZ1lBbkhicUlSdUdiMlJtcW4wWVgyQmlVMVNVQ0c5YVBCenBOMlFyRXFYSXdTT3Z0NSthUVFFbm0KTjlReWViZE96OWY0enQ5YjJJV1VydXhKOW12RiszZ1lrUFZBdG95VEpTdC90aU5kL2tLUzRaWDFTRm5sMERnRwplQjFra09ldXBtZHE5a0tNUDlTREFNVXFuN1lBNllwOE5XSXREMVZha0E1Y08rUU9GSkNrYmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRSGo1WXZ1dkFpZ0o5NjZiLzRRWElPekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOREV3TWpreE1qSTJOVGhhRncweU5URXdNamt4TWpJMk5UaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBN1ZZdTkyRERETm1zU3p5YVM1WUkvY2pNZFpLeEpCdkZob0FVSEJBSGxjaDVwU0lPd2srWQpkU1BQT3RScGI3UmpGSlloV0NsNWw2YjZCM3JWc2RvRGd3NVU4eVFHeXY0elpwSHNJOGxxOVJlVDdHTEVVYitXCkFXS1FqeHo4WjJyayt5dzlCNUFBL05ZWi8xOW5VZjR5K3pmbjVBanl6bFFpOHdWSGZuWmFIMjR0ZTRQM1ZsVHUKUVJFTUFnMnBaZzk2T2FvOGI3RXY0V3VlU1ZxdmZDek9DbjF3L1doRjhvUnNBZWp3amM2dGhXT2F4QkJlbHFEVgpmWnFpMTNwQithS1lHalZEeTJpWFVwM3U3RFVpN01oMjhIYnFRcDlQVGVWNXBDOGFkVlFxN0RZcVVSL291SlljCnpBUzNHRXJHQnloQ29LMGxicHdvMkp1OG41TzhrN202ZHdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtnQnZSbWRHbTNIREVuTkVCeWpQUDc0RzNqWmpNR0pCbTJneDJpRUliNFAKbmFCR0tPdDVYR2p6YkxwV1NaYmpXM09GVk9Qb3ljMGdqRXNINUd1U2hwZHA0OHhqOG5CQ2xmSGZuVitnYTRVYwpmVFpuQ0FpSWFXcndQNEJycXVydFlEeTliVUhuRFErMlJock84WVo1aXZ1ejZKQUlnT1JyeTBQT0dEdTg0NXkwCngrUUwzSm14UjQ3cndwZUdHd1gxa2Uwb1Y0a2Nqc3ZvV2RJc0xjWFlnN2d5UVRkZWNTVEJBQjBOOW5iSkRMaEgKZU1XODlzdURlSllJRDlvZlRjY2FCRWR2eTQvNW5MQitOVktnN0JmakFQWTdibWdNb2EyMVJWek9aSVFBSEkwRwpsMkZxUXh4OWJzZm05MFVjcXBFMXVWRGFMbi9zTU4wVWV0am1uMFhkcXhRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQVA4cEpQaFBTVkRyZXdCOG92emZyTTB3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJME1UQXlPVEV5TWpZMU9Gb1hEVEkxTVRBeU9URXlNalkxT0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcHhpOVk3MHlvbFFlKzZObzdja1VGVVBvalBPSTNnd29CSXp6ajBaTgpOak5Nc0hCb1lCSGJSeW1Lelh3OHZCcXREazlMUjljQjJzck4wRkM5Y0RZcVZ0eGNyZ3VKb3FkVTQ3bGpaMVFoCnAxU2RHTmtWTVlMbHZXMFM5YUErL3RiZjFmN2dHMVVyeC9WSzlOQVpKbjY5NnBmUUp1b1VmdTJBc1J6SngwSksKTiszNnNicnZxQllaRWdJLzJkVlpiQUIvNjVoTklKeU8yUVAwVDY3VjFubVRzbzFlSHdsU2FEb1EyTDZmR0hISwptU1ZqUGxvZ2lkMFhTZ3psTEoyQ3Q0ZTBBaGlFaC83WVR1UjFpZ3pNQ3FQTjhiZGY4U3VKU29ockRoS3c5aUZnClhzem11cUpCZ1dGaHpxTTFaWmQwRWtHZHlpZGdKNVh5ZVdMQmZOaUpReTVkWndJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0REdnNreVVNelhXdUl3U1pQR09NUnRnUEEKZVd6Rzg5U0tXRGxKQlF6TVREZzVzalhtb0l4ZWNMQTMzNWFQZENrTnVmVHJHVFpybWk3WkNiWXNJdnJoQUdSWQo4LzNNWG5wVWZJSFhvaE82amtWNXlKNFhSRkRlRXZxdUx5SXpVSGtxd0l5aFpuZ0t0cldWSUNkZWdQcUFKRGxrCnV0dFFDdFpma2RLdVI1WUxtRkI4Vi9TU1czdm10TFg1OEpiUm40c1pBbDBrZGhpNG9wU096Mk1vSUhhY0RzNTYKWXA5SUpUOHRKbEtvZkorWFdyM29JUnRhMnl5OGc2T3E3azExTGFPMmh5WXEvNHZTeFJrZW5yQUJROVIyY05tcAp4eU94OWFTWGdxeGZXNWxtaCtIQ3dOMnk2Ujg2SmlwaXJEMmZDd1Y0b1kzR3h3VGRlVW16ZUYyVnYrUnoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHhpOVk3MHlvbFFlKzZObzdja1VGVVBvalBPSTNnd29CSXp6ajBaTk5qTk1zSEJvCllCSGJSeW1Lelh3OHZCcXREazlMUjljQjJzck4wRkM5Y0RZcVZ0eGNyZ3VKb3FkVTQ3bGpaMVFocDFTZEdOa1YKTVlMbHZXMFM5YUErL3RiZjFmN2dHMVVyeC9WSzlOQVpKbjY5NnBmUUp1b1VmdTJBc1J6SngwSktOKzM2c2JydgpxQllaRWdJLzJkVlpiQUIvNjVoTklKeU8yUVAwVDY3VjFubVRzbzFlSHdsU2FEb1EyTDZmR0hIS21TVmpQbG9nCmlkMFhTZ3psTEoyQ3Q0ZTBBaGlFaC83WVR1UjFpZ3pNQ3FQTjhiZGY4U3VKU29ockRoS3c5aUZnWHN6bXVxSkIKZ1dGaHpxTTFaWmQwRWtHZHlpZGdKNVh5ZVdMQmZOaUpReTVkWndJREFRQUJBb0lCQUg3M3Q0RUFGR2R3VUJLWgplbk9rWk5RN3c0ckd5bXNmQlpGZm9QcHZTdUF5WHNWNnhIU3JYTmxYNFpaK0hwQTRIT05Rc1QwblRNdDVhcVl0Cms2U2VJOUhZbzd2RUhKTXhYcm1pOXJ0ZkhDdFBpZ2VGZkNzZzhYemNVcG05WitDd1dXajd3RUpFbDMzYkQxZXkKZ0VuVjZHMUhhZTBIMVFjVlpNSXZ3OHJhdmhaOFRiT3I1RUorcjBBVzhBWDJyYkNRRGkxWTBkUU9Jc2ZOT0E5TwoxTlZjdmQxa3NkZ0R2ZDVQc1lNVTVzZGJGNHowSDFmekJQd2NuUDFRd3FYeGpkRDI1V2hwbzM0WkFLTGFQZ3I5CkxEaWhVRE1wUU55NlQxQ05wOWpRSXIzSXNpZm90R3ZCd2tScGdaWVN1RzZFTXR0SEdVSWRTamNDeVNGM0kxZmkKMCs2ZjBuRUNnWUVBMGt5dkNRVXdLcURFa2Y3VGlBc1FubTBSbGlKM1cwRjU3bmdGMWxyWW14cTFGdnNtbzZWRApxUW9XN3V0WHVJU1F4ZDN4eW9HWm5wVEVrTWFEUTFNeFJGQkJGVTNULzBBS25xbU1ZQXV5SzRvaDlETzRmamtvCjE0Vm5yNnJoeEJFUE45WU8rVXh2U2JVbTF3b1F4ZlBiRVpDWjZoQW5jYW5oQWpsazRmNTg1Y1VDZ1lFQXkyaWIKSWlUVTFhT3BIdUEwdVRzeDM4MEZTT2RoMW5aTWg1ZThPVVpDYjdHYmhKYmJFeTVhL1oyVVFiMnBNZnZZUnFsbgpsS2xkOWh6SEhJdkFvbzRCU3dEaGNGd0s0UG05Q1VLc2ZocEk3ai9FSHBaazRxV09ZRFM5YVVySFJwZjZ3UG5KCkEyUkFrQlpXak8weEVhclRkN1Q0SnErSUZUa29sTnR1dldCZlZUc0NnWUJrY05Xa3BFSzJDV1Q1S2RGVUI1emYKWGM1cGUzcXdMaHlUWmVXNzFGWGg5cWFKSEZqL0RkNjc3S0s1WjlQVXdCUDVQU0RQaklpWGNneFQ3VXdpS3FpOApMT3g0eFZ3OGJCVG1aS296OFVJZWczSG1GWkhIVDN1UFBCc2lqcVlYbytJMTA5b0EvWjJsZ1l6VVplMU83a0l5CktITXFsSjZTTGdYV3J4emN4MVJWMVFLQmdRQ0NpVTBWYW1HVUFRV2xwT2p3L29ZUlEvZGlRK3RMd0h0NGdPM3cKSzZDeklWM1doeUZzZTlFMDlRMlI2dTlML24xYlM1Z0hsWEdSWWdKOTFVbjRoLzFZYnVZK1B6TlVFYkU0NGlyawplbVhYVCtEQ2FHMng3ZUVpNkhXdHZxbUlLanhuMzJVYTRobDAzb0VJeTZjejJWY0FlWWpPK3RMd0c5QnBSekVZCkkyTEt4UUtCZ0hiZ3RXWS8vbGVTNUhpQW5OSENRY3lqVDBwaFlyWkRXemtEV3MvQ2tuN1h0Y2RmQ0pOZGE3bnIKU1M0ZDhYYlJGb3RqekN1dFZHWHhyTlNVbk9JMFNtNldrK2pUdDlJZUZHd1QrVnVwMklPcVpVL3Z4TU9ZQ05UYgpVYjg0NzVlTXBHSkh6YkZaeFQwdWc5YWtyVFMvMDVyMzVrWmpBRUs5K0FjMHZDd3hNV1JYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQVA4cEpQaFBTVkRyZXdCOG92emZyTTB3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJME1UQXlPVEV5TWpZMU9Gb1hEVEkxTVRBeU9URXlNalkxT0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcHhpOVk3MHlvbFFlKzZObzdja1VGVVBvalBPSTNnd29CSXp6ajBaTgpOak5Nc0hCb1lCSGJSeW1Lelh3OHZCcXREazlMUjljQjJzck4wRkM5Y0RZcVZ0eGNyZ3VKb3FkVTQ3bGpaMVFoCnAxU2RHTmtWTVlMbHZXMFM5YUErL3RiZjFmN2dHMVVyeC9WSzlOQVpKbjY5NnBmUUp1b1VmdTJBc1J6SngwSksKTiszNnNicnZxQllaRWdJLzJkVlpiQUIvNjVoTklKeU8yUVAwVDY3VjFubVRzbzFlSHdsU2FEb1EyTDZmR0hISwptU1ZqUGxvZ2lkMFhTZ3psTEoyQ3Q0ZTBBaGlFaC83WVR1UjFpZ3pNQ3FQTjhiZGY4U3VKU29ockRoS3c5aUZnClhzem11cUpCZ1dGaHpxTTFaWmQwRWtHZHlpZGdKNVh5ZVdMQmZOaUpReTVkWndJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0REdnNreVVNelhXdUl3U1pQR09NUnRnUEEKZVd6Rzg5U0tXRGxKQlF6TVREZzVzalhtb0l4ZWNMQTMzNWFQZENrTnVmVHJHVFpybWk3WkNiWXNJdnJoQUdSWQo4LzNNWG5wVWZJSFhvaE82amtWNXlKNFhSRkRlRXZxdUx5SXpVSGtxd0l5aFpuZ0t0cldWSUNkZWdQcUFKRGxrCnV0dFFDdFpma2RLdVI1WUxtRkI4Vi9TU1czdm10TFg1OEpiUm40c1pBbDBrZGhpNG9wU096Mk1vSUhhY0RzNTYKWXA5SUpUOHRKbEtvZkorWFdyM29JUnRhMnl5OGc2T3E3azExTGFPMmh5WXEvNHZTeFJrZW5yQUJROVIyY05tcAp4eU94OWFTWGdxeGZXNWxtaCtIQ3dOMnk2Ujg2SmlwaXJEMmZDd1Y0b1kzR3h3VGRlVW16ZUYyVnYrUnoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUwwNGVkSkJDSDR2MTNuQUdFMCtLSGd3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TkRFd01qa3hNakkyTlRoYUZ3MHlOVEV3TWpreE1qSTJOVGhhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRGN1bElTWld1bGt1aWRvUmxlQWFpR1FBSlZTcW5wc2lzcE5zU3kvT2MzakJNdgpNRGxrbVNJQ2xoL0MxTmQwekY0SFJYTzl2MkxpeStOcTBEeWRvYXJGa3JQNVU3NDM2eWp3d0tETXhsekE0c1hsCjY4cnpCZXZSdWdPQ2Fabm1DNDJaOHRoY0NvaHJVT1Q2dlQyeVdMRDZvak41aDRhanJNZmUzc01aSndRVWJTREcKSUQxS2t2dTJSSlZiL0RIOVkrWTJkMWdPR0Z5WEp2SDRtMkV3T2w3cUJ4dGp3T09KaFFUTWI4NnNZSnBYQjN3SwpOQXN5Zk9jd2xza1QxOWpoODI1RmE5bXcxNjZKTmZWNmZTZlRPNnk1WWFlZmcxVTdvK0oyMGh5N1VqVm43cDVaCnNKQTdHTzBha094bVhQQ1phREd2ZHZ6TkVBcUtmWkhnbHJzVCtacFJBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUE4WjhWK3M2WTVScHI0QmtJOTh4UFd3Qk1uS2V5cFp2ZEEKa0dCRkFObEZNNEwxOTVoSVF4cjZDdGxsMFdvdGh6cVVoazVzUlZyVVN5MEkyQXJHT05nN3c4VVAzRksxaEttegpDSnpHL1V2andnRmdPZmtBY0RxSHdRL3IyU3FXY05sM1lRc0tSMmljMSs4UjNPbkZEWW1wQzdVSm1lSU5uL1RqCjNad09mYlBITW9xTTVsdlZKam9FRk9tUGI2eGpQL3FoSE92TTMxVVhEWWhhT0s2VU91YmR0UVNINUkwZHNzdmgKc21FdHVNdGljNEtUbE4wRTM1L1FCNitTNklzNnRiamlsRjJEODFwWXFGR1ppbDlneHZpY1RLN0JrZVdZZk5ISQo1elphOTFLa0h5eHlNNGl4b0dkd2NkMDIrT3NWcnEwVS9qZ0tuTVpnTWMzWlZEODFmM1dhCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM0xwU0VtVnJwWkxvbmFFWlhnR29oa0FDVlVxcDZiSXJLVGJFc3Z6bk40d1RMekE1ClpKa2lBcFlmd3RUWGRNeGVCMFZ6dmI5aTRzdmphdEE4bmFHcXhaS3orVk8rTitzbzhNQ2d6TVpjd09MRjVldksKOHdYcjBib0RnbW1aNWd1Tm1mTFlYQXFJYTFEaytyMDlzbGl3K3FJemVZZUdvNnpIM3Q3REdTY0VGRzBneGlBOQpTcEw3dGtTVlcvd3gvV1BtTm5kWURoaGNseWJ4K0p0aE1EcGU2Z2NiWThEamlZVUV6Ry9PckdDYVZ3ZDhDalFMCk1uem5NSmJKRTlmWTRmTnVSV3Zac05ldWlUWDFlbjBuMHp1c3VXR25uNE5WTzZQaWR0SWN1MUkxWis2ZVdiQ1EKT3hqdEdwRHNabHp3bVdneHIzYjh6UkFLaW4yUjRKYTdFL21hVVFJREFRQUJBb0lCQUgvNU1zNWhxUWpsWlNMSApIWHNJZ1JuZEVMMDh2Y2kxdVJwN0c0NGUzVHV5WmdrTTc2bW9zelJHc0FGNC83WkRLeDBTSW1uWUJkQXlvQmIwCnhzQXAxR1lhaVdnOEttUW5YcVEvT3J1ZkluWGV4UmhxSGsvS2xoQVJ4aWtkYXRJYXpxMThRLzhSU0VqWUxQcEgKTC9jd1B1UUJtTkNVUi9hcm5YSlZPMDVnOVplVkhkS25qWlBURjdUeHR4SXVjTHpvRW5QM3pBUmptZjhtMjZ5WApCWmo4bFBHSDUrYU9Qd3ovMDJvZGF3bGdxY0tBbExrNlN2SmtDcno0T0ROVGtGWXRqbTE4TW5KME1CTHQwRW5HCnZPOUhVZTJ2cGNPMkxlbWFrZXNWaHRva3JMOWliTnJTMm02aVMvWERlSENlZ0UrMndzWXJSQmNEYmJsZ1Y2bFQKOHM3ZWhhVUNnWUVBK2pyYWRTVW95RWRodTY0OEVhKzhxbWJXdzNTNnlYS2lJUGVXUktldHIvazJLRzRMTE14cgpNQUtJUXlnK1VmTCtPR01HaDRuZU9QV244cFFVZlFoOEE5R05vUG1Va0w5SDZHVkRNK3RjL2dLNnpyK2FQTlRkCmZPb2VWSjNhcXBGbUJQbktSS0xtb1gxNC9ES3Z0S05vMXF1YVIvUXZnb0xFY0xXc2h1SjVYZ3NDZ1lFQTRkRlAKMGFacExGb1hmVU5LTUdJVFZSYmpCSTg4TG9kRFExQmhyTXREQml6cUl4OUhSd1pOcFVOK3Q1ZnF0LzZIVTJTUQp0UnoxL1VYallobTc0ZkE5VUx4YnBSdnRnRUUxaUg2QklObkVUZVFBL1gxblhPd0plRy9TcU5Yd2Y4Z1daaVlQCnF2TzRBZzM1cmV0QnpxaTRKUnBrUXJwSGQzd0hyaXRzTy9uc0RwTUNnWUVBaUZTc1ZRcXJ6NEpra3haNGo4SkoKYmlXZGVOd09NRmNPVWh2U2VSRktKZ2dISTd2Z3hzV1EySlZvbS80L0JmTDM0c3pBNy9PRGFWRWQ4YUlRRDVjaAp5Z3JQdVJhQmhPTlNVQ0ZybmN2cjNGQ3NhcHdsY21NZlVVRlV5UkUvNDVKWUhQbmk0OFpGRlZNQktaYUwrRVRYCmg2M3kzcVVCaFgrdGV5TGdIcFVoUHNVQ2dZRUEyWllCdnhVRnlrS1UxNUg2N2x2U0hPOE1sOXdjTlFrSWV0ZjkKQmE1bFNwSUVtUXNPZHhWUHc2b2hjMjNpTUtBRWJRbzlsUVh1MExpQ3ZJZm5UWEZhNDJ4Yk1lQ1RIRDI1QTJoQgpyQkdvNFJTTkQ3UEI0UHRldExtcTFod3V2REZqdzlGd3oxdy9OVnVaOVViMkJkYjBlR3ZScDZvdUtxZE1EenF2Cjg2cUJGaGtDZ1lCMVQ0Z2JRdmZCdFNveFVmeFJ2elZGTkRRaDF6cGMwb1NDSWlYMGN0U3Q2MWFtV0pNdU11UlUKL3ZESGFjYWozSzM1UE12ZXFIYTlzb096eDR2SDUya2lrYmd6RVM4VE9lQkFHOEZRcEV3NG4va0c3K3RTKzdwegpUQmh6N0tBcEVwOFVXUHlOem1lWGpJMjVIeUZ1QlhuY0c3ZGdabVkvbVh2ZEhFejNUMWkwZ3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUwwNGVkSkJDSDR2MTNuQUdFMCtLSGd3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TkRFd01qa3hNakkyTlRoYUZ3MHlOVEV3TWpreE1qSTJOVGhhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRGN1bElTWld1bGt1aWRvUmxlQWFpR1FBSlZTcW5wc2lzcE5zU3kvT2MzakJNdgpNRGxrbVNJQ2xoL0MxTmQwekY0SFJYTzl2MkxpeStOcTBEeWRvYXJGa3JQNVU3NDM2eWp3d0tETXhsekE0c1hsCjY4cnpCZXZSdWdPQ2Fabm1DNDJaOHRoY0NvaHJVT1Q2dlQyeVdMRDZvak41aDRhanJNZmUzc01aSndRVWJTREcKSUQxS2t2dTJSSlZiL0RIOVkrWTJkMWdPR0Z5WEp2SDRtMkV3T2w3cUJ4dGp3T09KaFFUTWI4NnNZSnBYQjN3SwpOQXN5Zk9jd2xza1QxOWpoODI1RmE5bXcxNjZKTmZWNmZTZlRPNnk1WWFlZmcxVTdvK0oyMGh5N1VqVm43cDVaCnNKQTdHTzBha094bVhQQ1phREd2ZHZ6TkVBcUtmWkhnbHJzVCtacFJBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUE4WjhWK3M2WTVScHI0QmtJOTh4UFd3Qk1uS2V5cFp2ZEEKa0dCRkFObEZNNEwxOTVoSVF4cjZDdGxsMFdvdGh6cVVoazVzUlZyVVN5MEkyQXJHT05nN3c4VVAzRksxaEttegpDSnpHL1V2andnRmdPZmtBY0RxSHdRL3IyU3FXY05sM1lRc0tSMmljMSs4UjNPbkZEWW1wQzdVSm1lSU5uL1RqCjNad09mYlBITW9xTTVsdlZKam9FRk9tUGI2eGpQL3FoSE92TTMxVVhEWWhhT0s2VU91YmR0UVNINUkwZHNzdmgKc21FdHVNdGljNEtUbE4wRTM1L1FCNitTNklzNnRiamlsRjJEODFwWXFGR1ppbDlneHZpY1RLN0JrZVdZZk5ISQo1elphOTFLa0h5eHlNNGl4b0dkd2NkMDIrT3NWcnEwVS9qZ0tuTVpnTWMzWlZEODFmM1dhCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.14.10
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: l5d.m.daocloud.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: l5d.m.daocloud.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.14.10
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yNDEwMjkxMjI2NDdaFw0yNTEwMjkxMjI3MDdaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEPTDydT0rFY+0pjd6HheYhiHYc4hiAyKyUUw+kXwg2SBX0Kc0rMFa/W1oq60K
            4L2wUMdv2q/uuqQ9AvW8y8o9o6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBRZ8Ped0fvThFgNdb64m/tCDK6cljAKBggqhkjOPQQDAgNHADBEAiAj4WXjlTcp
            2SDs/BFQyrh7Tp18I1OOyno7IIIsF5L82wIgZ0kakYyyVLFt5g8H0HO/Qxnao9NX
            OsVLvjG/12TODmg=
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yNDEwMjkxMjI2NDdaFw0yNTEwMjkxMjI3MDdaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEPTDydT0rFY+0pjd6HheYhiHYc4hiAyKyUUw+kXwg2SBX0Kc0rMFa/W1oq60K
      4L2wUMdv2q/uuqQ9AvW8y8o9o6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBRZ8Ped0fvThFgNdb64m/tCDK6cljAKBggqhkjOPQQDAgNHADBEAiAj4WXjlTcp
      2SDs/BFQyrh7Tp18I1OOyno7IIIsF5L82wIgZ0kakYyyVLFt5g8H0HO/Qxnao9NX
      OsVLvjG/12TODmg=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.14.10
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: l5d.m.daocloud.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      image:
        name: l5d.m.daocloud.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: l5d.m.daocloud.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.3
      iptablesMode: legacy
      kubeAPIServerPorts: 443,26443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: true
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlOREV3TWpreE1qSTJORGRhRncweU5URXdNamt4TWpJM01EZGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVQVER5ZFQwckZZKzBwamQ2SGhlWWhpSFljNGhpQXlLeVVVdytrWHdnMlNCWDBLYzByTUZhL1cxb3E2MEsKNEwyd1VNZHYycS91dXFROUF2Vzh5OG85bzZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUlo4UGVkMGZ2VGhGZ05kYjY0bS90Q0RLNmNsakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFqNFdYamxUY3AKMlNEcy9CRlF5cmg3VHAxOEkxT095bm83SUlJc0Y1TDgyd0lnWjBrYWtZeXlWTEZ0NWc4SDBITy9ReG5hbzlOWApPc1ZMdmpHLzEyVE9EbWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUo5NTNxL09jeUcxSk9XTXhjR05GNXBHZzhCRjdmdzc3MmJxbXpGbEtvUmxvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUFREeWRUMHJGWSswcGpkNkhoZVloaUhZYzRoaUF5S3lVVXcra1h3ZzJTQlgwS2Mwck1GYQovVzFvcTYwSzRMMndVTWR2MnEvdXVxUTlBdlc4eThvOW93PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yNDEwMjkxMjI2NDdaFw0yNTEwMjkxMjI3MDdaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEPTDydT0rFY+0pjd6HheYhiHYc4hiAyKyUUw+kXwg2SBX0Kc0rMFa/W1oq60K
    4L2wUMdv2q/uuqQ9AvW8y8o9o6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBRZ8Ped0fvThFgNdb64m/tCDK6cljAKBggqhkjOPQQDAgNHADBEAiAj4WXjlTcp
    2SDs/BFQyrh7Tp18I1OOyno7IIIsF5L82wIgZ0kakYyyVLFt5g8H0HO/Qxnao9NX
    OsVLvjG/12TODmg=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.10
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.10
        linkerd.io/proxy-version: stable-2.14.10
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: d5c6aef1e89bb75875b311e9536c2c7030348a6c3cba7980b753d75beb1b1319
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: l5d.m.daocloud.io/linkerd/controller:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: l5d.m.daocloud.io/linkerd/proxy:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,26443"
        image: l5d.m.daocloud.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.10
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: f4ef5db02eaa0c4aa1d3334ea735cf7d2e2f472154f1060e22463221c9238fff
        linkerd.io/created-by: linkerd/cli stable-2.14.10
        linkerd.io/proxy-version: stable-2.14.10
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: d5c6aef1e89bb75875b311e9536c2c7030348a6c3cba7980b753d75beb1b1319
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: l5d.m.daocloud.io/linkerd/proxy:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: l5d.m.daocloud.io/linkerd/controller:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: l5d.m.daocloud.io/linkerd/controller:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: l5d.m.daocloud.io/linkerd/policy-controller:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,26443"
        image: l5d.m.daocloud.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.10
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
spec:
  concurrencyPolicy: Replace
  schedule: "36 12 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.14.10
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: l5d.m.daocloud.io/linkerd/controller:stable-2.14.10
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.10
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 31fa8619f25c646929da4abb7a08d32903d0057b816fbbf665763f1fe14547e5
        linkerd.io/created-by: linkerd/cli stable-2.14.10
        linkerd.io/proxy-version: stable-2.14.10
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: d5c6aef1e89bb75875b311e9536c2c7030348a6c3cba7980b753d75beb1b1319
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: l5d.m.daocloud.io/linkerd/proxy:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: l5d.m.daocloud.io/linkerd/controller:stable-2.14.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,26443"
        image: l5d.m.daocloud.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.10
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlOREV3TWpreE1qSTJORGRhRncweU5URXdNamt4TWpJM01EZGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFUFREeWRUMHJGWSswcGpkNkhoZVloaUhZYzRoaUF5S3lVVXcra1h3ZzJTQlgwS2Mwck1GYS9XMW9xNjBLCiAgICAgICAgNEwyd1VNZHYycS91dXFROUF2Vzh5OG85bzZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlJaOFBlZDBmdlRoRmdOZGI2NG0vdENESzZjbGpBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBajRXWGpsVGNwCiAgICAgICAgMlNEcy9CRlF5cmg3VHAxOEkxT095bm83SUlJc0Y1TDgyd0lnWjBrYWtZeXlWTEZ0NWc4SDBITy9ReG5hbzlOWAogICAgICAgIE9zVkx2akcvMTJUT0RtZz0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUo5NTNxL09jeUcxSk9XTXhjR05GNXBHZzhCRjdmdzc3MmJxbXpGbEtvUmxvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVQVER5ZFQwckZZKzBwamQ2SGhlWWhpSFljNGhpQXlLeVVVdytrWHdnMlNCWDBLYzByTUZhCiAgICAgICAgL1cxb3E2MEs0TDJ3VU1kdjJxL3V1cVE5QXZXOHk4bzlvdz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU5ERXdNamt4TWpJMk5EZGFGdzB5TlRFd01qa3hNakkzTURkYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVQVER5ZFQwckZZKzBwamQ2SGhlWWhpSFljNGhpQXlLeVVVdytrWHdnMlNCWDBLYzByTUZhL1cxb3E2MEsKICA0TDJ3VU1kdjJxL3V1cVE5QXZXOHk4bzlvNk5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUlo4UGVkMGZ2VGhGZ05kYjY0bS90Q0RLNmNsakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFqNFdYamxUY3AKICAyU0RzL0JGUXlyaDdUcDE4STFPT3lubzdJSUlzRjVMODJ3SWdaMGtha1l5eVZMRnQ1ZzhIMEhPL1F4bmFvOU5YCiAgT3NWTHZqRy8xMlRPRG1nPQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHlJbml0OgogIGt1YmVBUElTZXJ2ZXJQb3J0czogNDQzLDI2NDQzCiAgcnVuQXNSb290OiB0cnVlCg==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
